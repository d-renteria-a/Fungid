{"version":3,"sources":["config.js","Spinner.js","Images.js","Buttons.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","API_URL","process","PORT","className","icon","faBowlingBall","size","color","props","images","map","image","i","onClick","removeImage","public_id","faTimesCircle","src","secure_url","alt","htmlFor","faImage","type","id","onChange","faImages","multiple","App","state","uploading","e","files","Array","from","target","setState","formData","FormData","types","forEach","file","every","append","fetch","method","body","then","res","json","filter","this","Spinner","length","Images","Buttons","content","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oHAAAA,EAAOC,QAAU,CACbC,QAAQ,oBAAD,OAAsBC,mIAAYC,MAAQ,Q,iLCKtC,oBACb,qBAAKC,UAAU,iBAAf,SACE,cAAC,IAAD,CAAiBC,KAAMC,IAAeC,KAAK,KAAKC,MAAM,eCF3C,WAAAC,GAAK,OAClBA,EAAMC,OAAOC,KAAI,SAACC,EAAOC,GAAR,OACf,sBAAaT,UAAU,SAAvB,UACE,qBACEU,QAAS,kBAAML,EAAMM,YAAYH,EAAMI,YACvCZ,UAAU,SAFZ,SAIE,cAAC,IAAD,CAAiBC,KAAMY,IAAeV,KAAK,SAE7C,qBAAKW,IAAKN,EAAMO,WAAYC,IAAI,OAPxBP,OCFC,WAAAJ,GAAK,OAClB,sBAAKL,UAAU,iBAAf,UACE,sBAAKA,UAAU,SAAf,UACE,uBAAOiB,QAAQ,SAAf,SACE,cAAC,IAAD,CAAiBhB,KAAMiB,IAASd,MAAM,UAAUD,KAAK,UAEvD,uBAAOgB,KAAK,OAAOC,GAAG,SAASC,SAAUhB,EAAMgB,cAGjD,sBAAKrB,UAAU,SAAf,UACE,uBAAOiB,QAAQ,QAAf,SACE,cAAC,IAAD,CAAiBhB,KAAMqB,IAAUlB,MAAM,UAAUD,KAAK,UAExD,uBAAOgB,KAAK,OAAOC,GAAG,QAAQC,SAAUhB,EAAMgB,SAAUE,UAAQ,W,QCZjDC,G,kNAEnBC,MAAQ,CACNC,WAAW,EACXpB,OAAQ,I,EAGVe,SAAW,SAAAM,GACT,IAAMC,EAAQC,MAAMC,KAAKH,EAAEI,OAAOH,OAClC,EAAKI,SAAS,CAAEN,WAAW,IAE3B,IAAMO,EAAW,IAAIC,SAEfC,EAAQ,CAAC,YAAa,aAAc,aAE1CP,EAAMQ,SAAQ,SAACC,EAAM5B,GACnB,GAAI0B,EAAMG,OAAM,SAAAnB,GAAI,OAAIkB,EAAKlB,OAASA,KACpC,MAAM,IAAN,OAAYkB,EAAKlB,KAAjB,+BAGFc,EAASM,OAAO9B,EAAG4B,MAGrBG,MAAM,GAAD,OAAI3C,UAAJ,iBAA4B,CAC/B4C,OAAQ,OACRC,KAAMT,IAEPU,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAArC,GACJ,EAAK0B,SAAS,CACZN,WAAW,EACXpB,e,EAKNK,YAAc,SAAAS,GACZ,EAAKY,SAAS,CACZ1B,OAAQ,EAAKmB,MAAMnB,OAAOwC,QAAO,SAAAtC,GAAK,OAAIA,EAAMI,YAAcQ,Q,uDAIxD,IAAD,SACuB2B,KAAKtB,MAA3BC,EADD,EACCA,UAAWpB,EADZ,EACYA,OAanB,OACE,8BACE,qBAAKN,UAAU,UAAf,SAbY,WACd,QAAO,GACL,KAAK0B,EACH,OAAO,cAACsB,EAAD,IACT,KAAK1C,EAAO2C,OAAS,EACnB,OAAO,cAACC,EAAD,CAAQ5C,OAAQA,EAAQK,YAAa,EAAKA,cACnD,QACE,OAAO,cAACwC,EAAD,CAAS9B,SAAU,EAAKA,YAO9B+B,W,GA3DsBC,cCKlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.40dda76c.chunk.js","sourcesContent":["module.exports = {\r\n    API_URL: `http://localhost:${process.env.PORT || 8080}`\r\n}\r\n","/* eslint-disable import/no-anonymous-default-export */\r\n\r\nimport React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBowlingBall } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default () =>\r\n  <div className='spinner fadein'>\r\n    <FontAwesomeIcon icon={faBowlingBall} size='5x' color='#3B5998' />\r\n  </div>\r\n","/* eslint-disable import/no-anonymous-default-export */\r\n\r\nimport React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default props => \r\n  props.images.map((image, i) =>\r\n    <div key={i} className='fadein'>\r\n      <div \r\n        onClick={() => props.removeImage(image.public_id)} \r\n        className='delete'\r\n      >\r\n        <FontAwesomeIcon icon={faTimesCircle} size='2x' />\r\n      </div>\r\n      <img src={image.secure_url} alt='' />\r\n    </div>\r\n  )\r\n","/* eslint-disable import/no-anonymous-default-export */\r\n\r\nimport React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faImages, faImage } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default props => \r\n  <div className='buttons fadein'>\r\n    <div className='button'>\r\n      <label htmlFor='single'>\r\n        <FontAwesomeIcon icon={faImage} color='#3B5998' size='10x' />\r\n      </label>\r\n      <input type='file' id='single' onChange={props.onChange} /> \r\n    </div>\r\n    \r\n    <div className='button'>\r\n      <label htmlFor='multi'>\r\n        <FontAwesomeIcon icon={faImages} color='#6d84b4' size='10x' />\r\n      </label>\r\n      <input type='file' id='multi' onChange={props.onChange} multiple />\r\n    </div>\r\n  </div>","import React, { Component } from 'react'\nimport Spinner from './Spinner'\nimport Images from './Images'\nimport Buttons from './Buttons'\nimport { API_URL } from './config'\nimport './App.css'\n\nexport default class App extends Component {\n  \n  state = {\n    uploading: false,\n    images: []\n  }\n\n  onChange = e => {\n    const files = Array.from(e.target.files)\n    this.setState({ uploading: true })\n\n    const formData = new FormData()\n\n    const types = ['image/png', 'image/jpeg', 'image/gif']\n\n    files.forEach((file, i) => {\n      if (types.every(type => file.type !== type)) {\n        return (`'${file.type}' is not a supported format`)\n      }\n      \n      formData.append(i, file)\n    })\n\n    fetch(`${API_URL}/image-upload`, {\n      method: 'POST',\n      body: formData\n    })\n    .then(res => res.json())\n    .then(images => {\n      this.setState({ \n        uploading: false,\n        images\n      })\n    })\n  }\n\n  removeImage = id => {\n    this.setState({\n      images: this.state.images.filter(image => image.public_id !== id)\n    })\n  }\n\n  render() {\n    const { uploading, images } = this.state\n\n    const content = () => {\n      switch(true) {\n        case uploading:\n          return <Spinner />\n        case images.length > 0:\n          return <Images images={images} removeImage={this.removeImage} />\n        default:\n          return <Buttons onChange={this.onChange} />\n      }\n    }\n\n    return (\n      <div>\n        <div className='buttons'>\n          {content()}\n        </div>\n      </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}